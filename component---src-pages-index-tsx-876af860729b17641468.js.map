{"version":3,"file":"component---src-pages-index-tsx-876af860729b17641468.js","mappings":"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","sources":["webpack://microskhemka/./node_modules/@bem-react/classname/build/classname.production.min.js","webpack://microskhemka/./node_modules/@bem-react/classname/index.js","webpack://microskhemka/./node_modules/camelcase/index.js","webpack://microskhemka/../src/image-utils.ts","webpack://microskhemka/../src/components/hooks.ts","webpack://microskhemka/../src/components/layout-wrapper.tsx","webpack://microskhemka/../src/components/picture.tsx","webpack://microskhemka/../src/components/placeholder.tsx","webpack://microskhemka/../src/components/main-image.tsx","webpack://microskhemka/../src/components/gatsby-image.server.tsx","webpack://microskhemka/../src/components/gatsby-image.browser.tsx","webpack://microskhemka/../src/components/static-image.server.tsx","webpack://microskhemka/../src/components/static-image.tsx","webpack://microskhemka/./node_modules/gatsby-plugin-intl/index.js","webpack://microskhemka/./node_modules/gatsby-plugin-intl/link.js","webpack://microskhemka/./node_modules/gatsby-plugin-intl/with-intl.js","webpack://microskhemka/./src/colors.const.ts","webpack://microskhemka/./src/components/Slide/Slide.tsx","webpack://microskhemka/./src/components/Text/Text.tsx","webpack://microskhemka/./src/components/Link/Link.tsx","webpack://microskhemka/./src/components/LanguageSelect/LanguageSelect.tsx","webpack://microskhemka/./src/components/Header/Header.tsx","webpack://microskhemka/./src/components/Footer/__Contact/FooterContact.tsx","webpack://microskhemka/./src/components/Footer/Footer.tsx","webpack://microskhemka/./src/components/layout.tsx","webpack://microskhemka/./src/components/seo.tsx","webpack://microskhemka/./src/hooks/useLocalizedText.ts","webpack://microskhemka/./src/components/Title/Title.tsx","webpack://microskhemka/./src/views/index/Main/Main.tsx","webpack://microskhemka/./src/views/index/ProgrammingLanguages/ProgrammingLanguages.tsx","webpack://microskhemka/./src/tools/cloneElement.tsx","webpack://microskhemka/./src/components/Card/Card.tsx","webpack://microskhemka/./src/components/CardList/CardList.tsx","webpack://microskhemka/./src/views/index/Overview/Overview.tsx","webpack://microskhemka/./src/views/index/News/News.tsx","webpack://microskhemka/./src/views/index/Partners/__Card/PartnersCard.tsx","webpack://microskhemka/./src/views/index/Partners/Partners.tsx","webpack://microskhemka/./src/views/index/Blog/__Card/BlogCard.tsx","webpack://microskhemka/./src/views/index/MasterClass/MasterClass.tsx","webpack://microskhemka/./src/views/index/Blog/Blog.tsx","webpack://microskhemka/./src/components/Page/Page.tsx","webpack://microskhemka/./src/pages/index.tsx","webpack://microskhemka/./src/tools/capitalizeFirst.ts","webpack://microskhemka/./src/tools/getClassName.ts","webpack://microskhemka/./node_modules/@babel/runtime/helpers/extends.js","webpack://microskhemka/./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js"],"sourcesContent":["'use strict';function r(r){function t(t,i,a,o){var f=i?e+t+r.e+i:e+t,v=f;if(a){var s=' '+v+r.m;for(var u in a)if(a.hasOwnProperty(u)){var p=a[u];!0===p?v+=s+u:p&&(v+=s+u+n+p)}}if(void 0!==o)for(var y=0,c=(o=Array.isArray(o)?o:[o]).length;y<c;y++){var l=o[y];if(l&&'string'==typeof l.valueOf())for(var g=l.valueOf().split(' '),d=0;d<g.length;d++){var h=g[d];h!==f&&(v+=' '+h)}}return v}var e=r.n||'',n=r.v||r.m;return function(r,e){return function(n,i,a){return'string'==typeof n?'string'==typeof i||Array.isArray(i)?t(r,n,void 0,i):t(r,n,i,a):t(r,e,n,i)}}}Object.defineProperty(exports,'__esModule',{value:!0});var t=r({e:'-',m:'_'});exports.cn=t,exports.withNaming=r;\n","'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./build/classname.production.min.js')\n} else {\n  module.exports = require('./build/classname.development.js')\n}\n","'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nvar _exportNames = {\n  Link: true,\n  withIntl: true,\n  navigate: true,\n  changeLocale: true,\n  IntlContextProvider: true,\n  IntlContextConsumer: true\n};\nexports.withIntl = exports.navigate = exports.changeLocale = exports.Link = exports.IntlContextProvider = exports.IntlContextConsumer = void 0;\nvar _reactIntl = require(\"react-intl\");\nObject.keys(_reactIntl).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _reactIntl[key]) return;\n  exports[key] = _reactIntl[key];\n});\nvar _link = _interopRequireWildcard(require(\"./link\"));\nexports.Link = _link.default;\nexports.navigate = _link.navigate;\nexports.changeLocale = _link.changeLocale;\nvar _withIntl = _interopRequireDefault(require(\"./with-intl\"));\nexports.withIntl = _withIntl.default;\nvar _intlContext = require(\"./intl-context\");\nexports.IntlContextProvider = _intlContext.IntlContextProvider;\nexports.IntlContextConsumer = _intlContext.IntlContextConsumer;\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports.navigate = exports.default = exports.changeLocale = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _gatsby = require(\"gatsby\");\nvar _intlContext = require(\"./intl-context\");\nvar _excluded = [\"to\", \"language\", \"children\", \"onClick\"];\nvar Link = /*#__PURE__*/_react.default.forwardRef(function (_ref, ref) {\n  var to = _ref.to,\n    language = _ref.language,\n    children = _ref.children,\n    onClick = _ref.onClick,\n    rest = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);\n  return /*#__PURE__*/_react.default.createElement(_intlContext.IntlContextConsumer, null, function (intl) {\n    var languageLink = language || intl.language;\n    var link = intl.routed || language ? \"/\" + languageLink + to : \"\" + to;\n    var handleClick = function handleClick(e) {\n      if (language) {\n        localStorage.setItem(\"gatsby-intl-language\", language);\n      }\n      if (onClick) {\n        onClick(e);\n      }\n    };\n    return /*#__PURE__*/_react.default.createElement(_gatsby.Link, (0, _extends2.default)({}, rest, {\n      to: link,\n      onClick: handleClick,\n      ref: ref\n    }), children);\n  });\n});\nLink.propTypes = {\n  children: _propTypes.default.node.isRequired,\n  to: _propTypes.default.string,\n  language: _propTypes.default.string\n};\nLink.defaultProps = {\n  to: \"\"\n};\nvar _default = Link;\nexports.default = _default;\nvar navigate = function navigate(to, options) {\n  if (typeof window === \"undefined\") {\n    return;\n  }\n  var _window$___gatsbyIntl = window.___gatsbyIntl,\n    language = _window$___gatsbyIntl.language,\n    routed = _window$___gatsbyIntl.routed;\n  var link = routed ? \"/\" + language + to : \"\" + to;\n  (0, _gatsby.navigate)(link, options);\n};\nexports.navigate = navigate;\nvar changeLocale = function changeLocale(language, to) {\n  if (typeof window === \"undefined\") {\n    return;\n  }\n  var routed = window.___gatsbyIntl.routed;\n  var removePrefix = function removePrefix(pathname) {\n    var base = typeof __BASE_PATH__ !== \"undefined\" ? __BASE_PATH__ : __PATH_PREFIX__;\n    if (base && pathname.indexOf(base) === 0) {\n      pathname = pathname.slice(base.length);\n    }\n    return pathname;\n  };\n  var removeLocalePart = function removeLocalePart(pathname) {\n    if (!routed) {\n      return pathname;\n    }\n    var i = pathname.indexOf(\"/\", 1);\n    return pathname.substring(i);\n  };\n  var pathname = to || removeLocalePart(removePrefix(window.location.pathname));\n  // TODO: check slash\n  var link = \"/\" + language + pathname + window.location.search;\n  localStorage.setItem(\"gatsby-intl-language\", language);\n  (0, _gatsby.navigate)(link);\n};\nexports.changeLocale = changeLocale;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports.default = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactIntl = require(\"react-intl\");\nvar _default = function _default(Component) {\n  return function (props) {\n    console.warn(\"withIntl is deprecated. Please use injectIntl instead.\");\n    return /*#__PURE__*/_react.default.createElement((0, _reactIntl.injectIntl)(Component), props);\n  };\n};\nexports.default = _default;","export enum COLORS {\n  MIGOL_BLUE = '#28337B',\n  HEART_OF_ICE = '#F9FCFF',\n  RED = '#E75252',\n  GREEN = '#1BBFA3',\n  FOOTER = '#25304E',\n}\n\nexport const FONT_COLORS = {\n  'black': '#48484E',\n  'white': '#FBFDFD',\n  'grey': '#686868',\n  'light-grey': '#888',\n  'light-red': '#EC9B9A',\n  'light-green': '#90D2CE',\n  'footer': '#ACABB2',\n};\n\nexport type TFontColors = 'black' | 'white' | 'grey' | 'light-grey' | 'light-red' | 'light-green' | 'footer';\nexport type TColors = keyof typeof COLORS;\n","import React from \"react\";\nimport { COLORS } from \"../../colors.const\";\nimport { getClassName } from \"../../tools/getClassName\";\n\nconst cn = getClassName(\"slide\");\n\nimport './Slide.scss';\n\nexport type Props = {\n  className?: string,\n  children: React.ReactNode,\n  backgroundColor?: COLORS | string,\n  flexible?: boolean,\n  id?: string,\n};\n\nexport const Slide = ({\n  className,\n  children,\n  backgroundColor = COLORS.HEART_OF_ICE,\n  flexible,\n  id,\n}: Props) => {\n  const style = React.useMemo(() => ({ backgroundColor }), [backgroundColor]);\n\n  return <div id={id} className={cn({ flexible }, className)} style={style}>\n    {children}\n  </div>;\n};\n","import React, { useMemo } from 'react';\nimport { getClassName } from 'tools/getClassName';\nimport { FONT_COLORS, TFontColors } from \"../../colors.const\";\nimport { useLocalizedText } from 'hooks/useLocalizedText';\n\nimport './Text.scss';\n\nexport type Props = CommonTextProps & {\n  as?: 'p' | 'span' | 'div',\n  color: TFontColors,\n  className?: string,\n\n}\n\nexport type CommonTextProps = {\n  capitilize?: boolean,\n  translate?: boolean,\n  id?: string,\n  children: string,\n}\n\nconst cn = getClassName('text');\n\nexport const Text = ({ \n  as,\n  color,\n  className,\n  ...textProps\n}: Props) => {\n  const Component = as || 'p';\n\n  const style = useMemo(() => ({ color: FONT_COLORS[color] }), [color]);\n  const text = useLocalizedText(textProps);\n\n  return (\n    <Component\n      style={style}\n      className={cn(null, className)}\n    >\n      {text}\n    </Component>\n  );\n};\n","/* eslint-disable */\nimport React from \"react\";\nimport { Link as GatsbyLink } from 'gatsby-plugin-intl';\nimport { getClassName } from \"tools/getClassName\";\n\nimport './Link.scss';\n\nconst cn = getClassName('Link');\n\ntype Props = {\n    to: string;\n    children: React.ReactNode;\n    className?: string;\n    partiallyActive?: boolean;\n    active?: boolean;\n}\n\nexport const Link = ({\n  children,\n  to,\n  className = '',\n  partiallyActive,\n  ...other\n}: Props) => {\n  const internal = /^\\/(?!\\/)/.test(to);\n\n  if (internal) {\n    return (\n      <GatsbyLink\n        to={to}\n        activeClassName={cn({ active: true })}\n        className={cn(null, className)}\n        partiallyActive={partiallyActive}\n      >\n        {children}\n      </GatsbyLink>\n    );\n  }\n  return (\n    <a className={cn(null, className)} href={to} {...other}>\n      {children}\n    </a>\n  );\n};\n\nexport default Link;\n","import React, {\n  useCallback, useState \n} from 'react';\nimport {\n  changeLocale, useIntl \n} from 'gatsby-plugin-intl';\n\nimport { capitalizeFirstLetter } from 'tools/capitalizeFirst';\n\nimport { getClassName } from 'tools/getClassName';\n\nconst cn = getClassName('LanguageSelect');\n\ntype Props = {\n    className?: string;\n    language: string;\n    onChange?: (locale: string) => void;\n}\n\nconst options = [\n  {\n    id: 'en',\n    label: 'English' \n  },\n  {\n    id: 'ru',\n    label: 'Russian' \n  },\n  {\n    id: 'ca',\n    label: 'Catalan' \n  },\n  {\n    id: 'es',\n    label: 'Spanish' \n  },\n];\n\nexport const LanguageSelect = (props: Props) => {\n  const [locale, setLocale] = useState(props.language);\n  const intl = useIntl();\n\n  const onChange = useCallback((e: React.ChangeEvent<HTMLSelectElement>) => {\n    const locale = e.target.value;\n\n    setLocale(locale);\n    changeLocale(locale);\n    props.onChange?.(locale);\n  }, []);\n\n  return (\n    <select\n      value={locale}\n      onChange={onChange}\n      className={cn(null, props.className)}\n    >\n      {options.map(({ id, label }) => {\n        const tranlsatedLabel = intl.formatMessage({ id: label });\n\n        return (\n          <option key={id} value={id}>\n            {capitalizeFirstLetter(tranlsatedLabel)}\n          </option>\n        );\n      })}\n    </select>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"components/Link/Link\";\nimport { Text } from \"components/Text/Text\";\nimport { getClassName } from \"tools/getClassName\";\nimport { LanguageSelect } from \"components/LanguageSelect/LanguageSelect\";\nimport { PageProps } from \"components/Page/Page.props\";\n\nimport './Header.scss';\n\nconst cn = getClassName(\"header\");\n\nconst links = [\n  // {\n  //   title: \"menu.Home\",\n  //   to: \"/\" \n  // },\n  {\n    title: \"menu.Overview\",\n    to: \"#overview\" \n  },\n  {\n    title: \"menu.About\",\n    to: \"/#about\" \n  },\n  // {\n  //   title: \"menu.Events\",\n  //   to: \"/\" \n  // },\n  {\n    title: \"menu.Contacts\",\n    to: \"#info\" \n  }\n];\n\ntype Props = {\n  siteTitle: string;\n  pageContext: PageProps['pageContext'];\n}\n\nexport const Header = ({ siteTitle, pageContext }: Props) => (\n  <header className={cn()}>\n    <div className={cn('brand')}>{siteTitle}</div>\n    <nav className={cn('links-group')}>\n      {links.map(({ title, to }) => (\n        <Link key={title} className={cn('link')} to={to}>\n          <Text color='white' capitilize>{title}</Text>\n        </Link>\n      ))}\n      <LanguageSelect className={cn('language-select')} language={pageContext.intl.language}/>\n    </nav>\n  </header>\n);\n","import React from 'react';\nimport { Link } from 'components/Link/Link';\nimport { Text } from 'components/Text/Text';\n\nimport { getClassName } from 'tools/getClassName';\n\nimport './FooterContact.scss';\n\nconst cn = getClassName('footer-contact');\n\ntype Props = {\n    label: string,\n    text: string,\n    link: string,\n    className?: string,\n}\n\nexport const FooterContact = ({\n  label,\n  text,\n  link,\n  className = '',\n}:Props) => (\n  <div className={cn(null, className)} key={link}>\n    {/* <Text as='span' color='footer' className={cn('label')}>{label}</Text> */}\n    <Link to={link} className={cn('link')}>\n      <Text translate={false} color='white'>{text}</Text>\n    </Link>\n  </div>);\n","import React from \"react\";\nimport { getClassName } from \"tools/getClassName\";\n\nimport { Slide } from \"../Slide/Slide\";\nimport { COLORS } from \"../../colors.const\";\nimport { FooterContact } from \"./__Contact/FooterContact\";\n\nimport './Footer.scss';\n\nconst cn = getClassName(\"footer\");\n\nconst contacts = [\n  {\n    label: '☎️',\n    text: 'Tel: 697-940-647',\n    link: 'tel:+34697940647' \n  },\n  {\n    label: '💬',\n    text: 'WhatsApp',\n    link:'http://wa.me/+79154124467' \n  },\n  // {\n  //   label: '📷',\n  //   text: 'Instagram',\n  //   link:'https://www.instagram.com/microschemka' \n  // },\n  {\n    label: '📫',\n    text: 'microskhemka@gmail.com',\n    link:'mailto:info@telep.com' \n  },\n];\n\n\nexport const Footer = () => (\n  <Slide id=\"info\" flexible backgroundColor={COLORS.FOOTER}>\n    <footer className={cn()}>\n      <div className={cn('brand')}>\n        <div className={cn('contacts')}>\n          {contacts.map((contact) => <FooterContact key={contact.link} {...contact} />)}\n        </div>\n        {/* <Text className={cn('trademark')} color='footer'>© {new Date().getFullYear()} &middot; Microskhemka</Text> */}\n      </div>\n      \n    </footer>\n  </Slide>\n\n);\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nimport { Header } from \"./Header/Header\";\nimport { Footer } from \"./Footer/Footer\";\n\nimport { PageProps } from \"./Page/Page.props\";\n\nimport '../common.scss';\n\ntype Props = {\n  children: React.ReactNode;\n  page: PageProps\n}\n\nexport const Layout = ({ children, page }: Props) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <Header\n        siteTitle={data.site.siteMetadata?.title || `Title`}\n        pageContext={page.pageContext}\n      />\n      <main>{children}</main>\n      <Footer />\n    </>\n  );\n};\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  );\n}\n\nexport default Seo;\n","import { useMemo } from 'react';\nimport { useIntl } from \"gatsby-plugin-intl\";\nimport { capitalizeFirstLetter } from 'tools/capitalizeFirst';\n\nexport const useLocalizedText = ({\n  id,\n  children,\n  capitilize,\n  translate = true,\n}: {\n  id?: string;\n  children: string;\n  capitilize?: boolean;\n  translate?: boolean;\n}) => {\n  const intl = useIntl();\n  const text = useMemo(() => {\n    const textValue = id || children;\n    const message = translate ? intl.formatMessage({ id: textValue }) : textValue;\n\n    return capitilize ? capitalizeFirstLetter(message) : message;\n  },\n  [id, children, capitilize]);\n\n  return text;\n};\n","import React from \"react\";\nimport { useMemo } from \"react\";\nimport { getClassName } from \"tools/getClassName\";\nimport { useLocalizedText } from \"hooks/useLocalizedText\";\nimport { CommonTextProps } from \"components/Text/Text\";\nimport { FONT_COLORS, TFontColors } from \"../../colors.const\";\n\nimport './Title.scss';\n\ntype TitleProps = CommonTextProps & {\n    as?: 'h1' | 'h2' | 'h3' | 'span',\n    color?: TFontColors,\n    className?: string,\n    subtitle?: boolean,\n}\n\nconst cn = getClassName('title');\n\nexport const Title = ({\n  as,\n  color = 'black',\n  className,\n  subtitle,\n  ...textProps\n}: TitleProps) => {\n  const Component = as ?? 'span';\n  const style = useMemo(() => ({ color: FONT_COLORS[color] }), [color]);\n  const text = useLocalizedText(textProps);\n\n  return <Component style={style} className={cn({ subtitle }, className)}>{text}</Component>;\n};\n","import React from \"react\";\nimport { getClassName } from \"../../../tools/getClassName\";\nimport { Title } from \"../../../components/Title/Title\";\nimport { Text } from \"../../../components/Text/Text\";\n\nimport { Button } from \"../../../components/Button/Button\";\n\nimport './Main.scss';\n\nconst cn = getClassName('index-main');\n\nexport const Main = () => (\n  <div className={cn()}>\n    <div className={cn('title-desc')}>\n      <Title as='h1' color='white' capitilize>title.main</Title>\n      <Text color='white' capitilize>text.intro</Text>\n      {/* <Button>\n        <Text color='white'>Sing up now</Text>\n      </Button> */}\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport { getClassName } from \"../../../tools/getClassName\";\nimport { Title } from \"../../../components/Title/Title\";\n\nimport './ProgrammingLanguages.scss';\n\nconst cn = getClassName('programming-languages');\n\nexport const ProgrammingLanguages = () => (\n  <div className={cn()}>\n    <Title\n      className={cn('title')}\n      as='h2'\n      color='black'\n      capitilize\n    >\n        title.classes\n    </Title>\n  </div>\n);\n","import React from \"react\";\n\nexport const cloneElement = (elem: React.ReactNode, extraProps: Record<string, any>) => {\n  if (elem && typeof elem === 'object' && ('type' in elem)) {\n    const { props } = elem;\n\n    const className = [props.className, extraProps.className].filter(Boolean).join(' ');\n\n    return <elem.type\n      {...props}\n      className={className}>\n      {props?.children}\n    </elem.type>;\n  }\n\n  return elem;\n};\n","import React from 'react';\nimport { getClassName } from 'tools/getClassName';\nimport { cloneElement } from 'tools/cloneElement';\nimport { Text } from 'components/Text/Text';\n\nexport type Props = {\n  title: string;\n  subtitle: string;\n  ImageNode: React.ReactNode;\n  className?: string;\n  interactive?: boolean;\n};\n\nconst cn = getClassName('card');\n\nimport './Card.scss';\n\nexport const Card: React.FC<Props> = ({\n  title,\n  subtitle,\n  ImageNode,\n  className,\n  interactive = true,\n}) => {\n  return (\n    <div className={cn({ interactive }, className)}>\n      <div className={cn('image-wrapper')}>\n        {cloneElement(ImageNode, { className: cn('image') })}\n      </div>\n      <div className={cn('content')}>\n        {title && <Text color='grey' className={cn('title')} capitilize>{title}</Text>}\n        <Text color='light-grey' className={cn('subtitle')} capitilize>{subtitle}</Text>\n      </div>\n    </div>\n  );\n};\n\n","import React from 'react';\nimport { getClassName } from 'tools/getClassName';\n\nimport { Card, Props as CardProps } from '../Card/Card';\n\ntype Props = {\n  className?: string;\n  items: CardProps[];\n}\n\nconst cn = getClassName('card-list');\n\nimport './CardList.scss';\n\nexport const CardList = ({\n  className,\n  items\n}: Props) => (\n  <div className={cn(null, className)}>\n    {items.map((item) => (<Card key={item.title} {...item} className={cn('item')} />))}\n  </div>\n);\n","import React from \"react\";\nimport { getClassName } from \"../../../tools/getClassName\";\nimport { Title } from \"../../../components/Title/Title\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { CardList } from \"../../../components/CardList/CardList\";\n\nimport './Overview.scss';\n\nconst cn = getClassName('overview');\n\nconst items = [\n  {\n    title: 'arduino basics',\n    ImageNode: <StaticImage src='./assets/Arduino.jpg' alt='' />,\n    subtitle: 'arduino projects' \n  },\n  {\n    title: 'Coding on Scratch',\n    ImageNode: <StaticImage src='./assets/Scratch_2.jpg' alt='' />,\n    subtitle: 'programming basics' \n  },\n  {\n    title: 'Tinkercad',\n    ImageNode: <StaticImage src='./assets/Robot.jpg' alt='' />,\n    subtitle: '3d modeling and circuit design basics' \n  },\n  {\n    title: 'C programming language',\n    ImageNode: <StaticImage src='./assets/C.jpg' alt='' />,\n    subtitle: 'arduino projects' \n  },\n];\n\nexport const Overview = (props: { className?: string }) => (\n  <div className={cn(null, props.className)}>\n    <Title subtitle color='light-grey' capitilize>title.overview</Title>\n    <CardList className={cn('list')} items={items} />\n  </div>\n);\n","import React from \"react\";\nimport { getClassName } from \"../../../tools/getClassName\";\nimport { Title } from \"../../../components/Title/Title\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { CardList } from \"../../../components/CardList/CardList\";\n\nimport './News.scss';\n\nconst cn = getClassName('news');\n\nconst items = [\n  {\n    title: 'Funlab & Smileschool',\n    ImageNode: <StaticImage\n      src='./assets/Partners.jpg'\n      alt='https://www.pexels.com/ru-ru/@fauxels/'\n      aspectRatio={1 / 1}\n    />,\n    subtitle: 'news.funlab-partnership',\n    interactive: false,\n  },\n  {\n    title: 'Autonomo',\n    ImageNode: <StaticImage\n      src='./assets/Papers.jpg'\n      alt='https://www.pexels.com/ru-ru/@kelly-1179532/'\n      aspectRatio={1 / 1}\n    />,\n    subtitle: 'news.applying-to-autonomo',\n    interactive: false,\n  },\n];\n\nexport const News = (props: { className?: string }) => (\n  <div className={cn(null, props.className)}>\n    <Title subtitle color='light-grey'>title.latest-news</Title>\n    <CardList className={cn('list')} items={items} />\n  </div>\n);\n","import React from 'react';\nimport { cloneElement } from 'tools/cloneElement';\nimport { getClassName } from 'tools/getClassName';\nimport { Title } from 'components/Title/Title';\nimport { Text } from 'components/Text/Text';\n\nimport './PartnersCard.scss';\n\nconst cn = getClassName('partners-card');\n\nexport type Props = {\n  className?: string;\n  ImageNode: React.ReactNode;\n  title?: string;\n  description?: string;\n}\n\nexport const PartnerCard = ({\n  className,\n  title,\n  description,\n  ImageNode,\n}: Props) => {\n  return (\n    <div className={cn(null, className)}>\n      <div className={cn('logo')}>\n        {cloneElement(ImageNode, {\n          width: 256,\n          height: 256,\n          className: cn('image') \n        })}\n      </div>\n      <div className={cn('text')}>\n        {title && (\n          <Title\n            as='h3'\n            color='grey'\n            subtitle\n            className={cn('title')}\n          >\n            {title}\n          </Title>\n        )}\n        <Text capitilize color='light-grey'>{description}</Text>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { getClassName } from \"../../../tools/getClassName\";\nimport { Title } from \"../../../components/Title/Title\";\n\nimport { StaticImage } from \"gatsby-plugin-image\";\n\nimport './Partners.scss';\nimport { PartnerCard } from \"./__Card/PartnersCard\";\n\nconst cn = getClassName('partners');\n\nconst partners = [\n  {\n    key: 'funlab',\n    ImageNode: <StaticImage src={'./assets/Funlab.jpg'} alt='Funlab logo' />,\n    description: 'funlab-description',\n  },\n  {\n    key: 'smileschool',\n    ImageNode: <StaticImage src={'./assets/SmileSchool.png'} alt='Smile school logo' />,\n    description: 'smileschool-description',\n  },\n];\n\nexport const Partners = (props: { className?: string }) => (\n  <div className={cn(null, props.className)}>\n    <Title subtitle color='light-grey'>title.partners</Title>\n    <div className={cn('content')}>\n      <div className={cn('list-wrapper')}>\n        <div className={cn('list')}>\n          <div className={cn('list-content')}>\n            {partners.map(({ key, ...partner }) => (\n              <PartnerCard\n                key={key}\n                className={cn('list-item')}\n                {...partner}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n","import React, { useMemo } from 'react';\nimport { Link } from 'gatsby';\nimport { Button } from 'components/Button/Button';\nimport { Text } from 'components/Text/Text';\nimport { Title } from 'components/Title/Title';\nimport { getClassName } from 'tools/getClassName';\n\nimport {\n  COLORS, TFontColors \n} from '../../../../colors.const';\n\nconst cn = getClassName('blog-card');\n\nimport './BlogCard.scss';\n\nexport type Props = {\n  className?: string;\n  title: string;\n  description?: string | string[];\n  link: {\n    to: string;\n    title: string;\n  },\n  color?: COLORS.GREEN | COLORS.RED;\n}\n\nconst textColor: Record<COLORS.GREEN | COLORS.RED, TFontColors> = {\n  [COLORS.GREEN]: 'light-green',\n  [COLORS.RED]: 'light-red',\n};\n\nexport const BlogCard = ({\n  title,\n  description,\n  link,\n  color = COLORS.GREEN,\n}: Props) => {\n  const style = { backgroundColor: color, };\n\n  const descriptionText = useMemo(() => {\n    if (!description) {\n      return null;\n    }\n\n    if (Array.isArray(description)) {\n      return description.map((item, index) => (\n        <Text key={`${title}-description-${index}`} className={cn('description')} color='white'>\n          {item}\n        </Text>\n      ));\n    }\n\n    return (\n      <Text className={cn('description')} color='white'>\n        {description}\n      </Text>\n    );\n  }, [description, title]);\n\n  return (\n    <div style={style} className={cn()}>\n      <Title subtitle color='white' className={cn('title')}>\n        {title}\n      </Title>\n      {descriptionText}\n      {/* <div className={cn('link')}>\n        <Link to={link.to} title={link.title}>\n          <Button color='white'>\n            <Text color={textColor[color]}>{link.title}</Text>\n          </Button>\n        </Link>\n      </div> */}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { getClassName } from \"tools/getClassName\";\nimport { Title } from \"components/Title/Title\";\n\nimport './MasterClass.scss';\n\nconst cn = getClassName('master-class');\n\nexport const MasterClass = (props: { className?: string }) => (\n  <div className={cn(null, props.className)}>\n    <Title subtitle color='white'>title.future-master-classes</Title>\n  </div>\n);\n","import React from \"react\";\nimport { COLORS } from \"../../../colors.const\";\nimport { getClassName } from \"../../../tools/getClassName\";\n\nimport './Blog.scss';\nimport {\n  BlogCard, Props as BlogCardProps \n} from \"./__Card/BlogCard\";\n\nconst cn = getClassName('blog');\n\nconst posts: BlogCardProps[] = [\n  {\n    title: 'title.welcome-note',\n    description: [\n      'Welcome to the exciting world of innovations!',\n      'Our courses are designed to introduce you to the basics of programming and robotics, unleash your creativity through 3D design.',\n      'Whether you\\'re coding your first program, programming a robot to navigate challenges, or bringing your ideas to life with 3D modeling, we are here to guide you every step of the way.',\n      'Let\\'s start this journey together. Dream, design, and develop with no bounds!',\n    ].map(p => `text.${p}`),\n    link: {\n      to: '',\n      title: 'Read more',\n    },\n    color: COLORS.GREEN,\n  },\n  {\n    title: 'title.our-vision',\n    description: [\n      'Our goal is to make studying comprehensive topics simple and exciting',\n      'All the amazing things that surround us are made by humans, and only this fact might make you curious and wish to know:  \"How does it works, how it is made and how could I use it\"',\n      'And we can inspire you to explore and study this unbelievable natural and closely related to it man-made world'\n    ].map(p => `text.${p}`),\n    link: {\n      to: '',\n      title: 'Read more',\n    },\n    color: COLORS.RED,\n  },\n];\n\nexport const Blog = (props: { className?: string }) => (\n  <div className={cn(null, props.className)}>\n    {posts.map((post) => (<BlogCard key={post.title} {...post} />))}\n  </div>\n);\n","// Components to provide the necessary contexts to page \nimport React from 'react';\nimport { IntlContextProvider } from \"gatsby-plugin-intl\";\n\nimport { PageWrapperProps } from \"./Page.props\";\n\nexport const Page = ({ children, pageContext }: PageWrapperProps) => {\n  return (\n    <IntlContextProvider value={pageContext.intl}>\n      {children}\n    </IntlContextProvider>\n  );\n};\n","import * as React from \"react\";\nimport { COLORS } from \"../colors.const\";\nimport { PageProps } from \"components/Page/Page.props\";\n\nimport { Layout } from \"components/layout\";\nimport Seo from \"components/seo\";\n\nimport {\n  Slide, Props as SlideProps \n} from \"../components/Slide/Slide\";\n\nimport {\n  Main,\n  ProgrammingLanguages,\n  Overview,\n  News,\n  Partners,\n  MasterClass,\n  Blog,\n} from '../views/index';\n\nimport { getClassName } from \"../tools/getClassName\";\n\nimport './index.scss';\nimport { Page } from \"components/Page/Page\";\n\nconst cn = getClassName('index');\n\nconst Content = [\n  {\n    slide: { className: cn('slide', { type: 'main' }) },\n    content: <Main />,\n  },\n  {\n    slide: {\n      id: 'overview',\n      flexible: true,\n      className: cn('slide') \n    },\n    content: <ProgrammingLanguages />,\n  },\n  {\n    slide: {\n      flexible: true,\n      className: cn('slide') \n    },\n    content: <Overview />\n  },\n  {\n    slide: {\n      flexible: true,\n      className: cn('slide', { type: 'partners' }) \n    },\n    content: <Partners />\n  },\n  // {\n  //   slide: {\n  //     backgroundColor: COLORS.MIGOL_BLUE,\n  //     className: cn('slide', { type: 'master-class' }) \n  //   },\n  //   content: <MasterClass />\n  // },\n  {\n    slide: {\n      flexible: true,\n      className: cn('slide') \n    },\n    content: <News />\n  },\n  {\n    slide: {\n      id: 'about',\n      flexible: true,\n      className: cn('slide', { type: 'blog' }) \n    },\n    content: <Blog />\n  },\n] as Array<{\n  slide: SlideProps,\n  content: React.ReactNode\n}>;\n\n\nconst IndexPage = (props: PageProps) => {  \n  return (\n    <Page {...props}>\n      <Layout page={props} >\n        {Content.map(({ slide, content }, index) => (\n          <Slide key={`slide-${index}`} {...slide}>\n            {content}\n          </Slide>\n        ))}\n      </Layout>\n    </Page>\n  );\n\n};\n\nexport const Head = () => (<>\n  <Seo title=\"Home\" description={undefined} />\n</>);\n\nexport default IndexPage;\n","export const capitalizeFirstLetter = (\n  str: string\n) => str.charAt(0).toLocaleUpperCase() + str.slice(1);\n","import { withNaming } from '@bem-react/classname';\n\nexport const getClassName = withNaming({ e: '__', m: '_' });\n","function _extends() {\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["r","t","i","a","o","f","e","v","s","m","u","hasOwnProperty","p","n","y","c","Array","isArray","length","l","valueOf","g","split","d","h","exports","withNaming","module","UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","TypeError","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","test","slice","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","postProcess","W","hasNativeLazyLoadSupport","HTMLImageElement","prototype","z","width","height","className","style","P","loading","shouldLoad","opacity","A","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","transition","H","F","_ref5","layout","paddingTop","maxWidth","display","alt","role","src","G","children","V","B","U","srcSet","decoding","Y","fallback","sources","sizes","_ref6","media","type","key","X","propTypes","isRequired","displayName","J","Z","Error","K","Q","ee","te","ae","_len","arguments","_key","apply","concat","ie","image","se","re","ne","Set","oe","le","de","as","class","onStartLoad","onLoad","onError","w","b","E","k","S","M","N","$","JSON","stringify","images","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ce","he","ue","__imageData","__error","console","warn","ge","imgClassName","imgStyle","placeholder","pe","_len2","_key2","me","fe","we","_interopRequireDefault","require","__esModule","_exportNames","Link","withIntl","navigate","changeLocale","IntlContextProvider","IntlContextConsumer","_reactIntl","Object","keys","forEach","call","_link","obj","nodeInterop","default","cache","_getRequireWildcardCache","get","newObj","hasPropertyDescriptor","defineProperty","getOwnPropertyDescriptor","desc","set","_interopRequireWildcard","_withIntl","_intlContext","WeakMap","cacheBabelInterop","cacheNodeInterop","_extends2","_objectWithoutPropertiesLoose2","_react","_propTypes","_gatsby","_excluded","forwardRef","_ref","to","language","onClick","rest","createElement","intl","languageLink","link","routed","localStorage","setItem","node","defaultProps","_default","window","_window$___gatsbyIntl","___gatsbyIntl","pathname","indexOf","substring","removeLocalePart","base","__BASE_PATH__","removePrefix","location","search","Component","props","injectIntl","COLORS","FONT_COLORS","cn","getClassName","Slide","HEART_OF_ICE","flexible","id","React","Text","color","textProps","useMemo","text","useLocalizedText","partiallyActive","other","GatsbyLink","activeClassName","active","assign","href","label","LanguageSelect","setLocale","useState","useIntl","onChange","useCallback","_props$onChange","target","value","tranlsatedLabel","formatMessage","capitalizeFirstLetter","links","title","Header","siteTitle","pageContext","_ref2","capitilize","FooterContact","translate","contacts","Footer","FOOTER","contact","Layout","_data$site$siteMetada","page","data","useStaticQuery","site","siteMetadata","_site$siteMetadata","_site$siteMetadata2","description","metaDescription","defaultTitle","name","content","property","author","textValue","message","Title","subtitle","Main","ProgrammingLanguages","cloneElement","elem","extraProps","Boolean","Card","ImageNode","interactive","CardList","items","item","StaticImage","Overview","aspectRatio","News","PartnerCard","partners","Partners","partner","BlogCard","GREEN","RED","descriptionText","index","posts","Blog","post","Page","Content","slide","Head","Seo","undefined","str","_extends","bind","this","excluded","sourceKeys"],"sourceRoot":""}