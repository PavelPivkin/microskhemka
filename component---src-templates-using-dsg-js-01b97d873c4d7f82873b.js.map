{"version":3,"file":"component---src-templates-using-dsg-js-01b97d873c4d7f82873b.js","mappings":"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","sources":["webpack://microskhemka/./node_modules/@bem-react/classname/build/classname.production.min.js","webpack://microskhemka/./node_modules/@bem-react/classname/index.js","webpack://microskhemka/./src/colors.const.ts","webpack://microskhemka/./src/components/Slide/Slide.tsx","webpack://microskhemka/./src/components/Text/Text.tsx","webpack://microskhemka/./src/tools/getClassName.ts","webpack://microskhemka/./src/components/Header/Header.tsx","webpack://microskhemka/./src/components/Footer/Footer.tsx","webpack://microskhemka/./src/components/layout.js","webpack://microskhemka/./src/components/seo.js","webpack://microskhemka/./src/templates/using-dsg.js"],"sourcesContent":["'use strict';function r(r){function t(t,i,a,o){var f=i?e+t+r.e+i:e+t,v=f;if(a){var s=' '+v+r.m;for(var u in a)if(a.hasOwnProperty(u)){var p=a[u];!0===p?v+=s+u:p&&(v+=s+u+n+p)}}if(void 0!==o)for(var y=0,c=(o=Array.isArray(o)?o:[o]).length;y<c;y++){var l=o[y];if(l&&'string'==typeof l.valueOf())for(var g=l.valueOf().split(' '),d=0;d<g.length;d++){var h=g[d];h!==f&&(v+=' '+h)}}return v}var e=r.n||'',n=r.v||r.m;return function(r,e){return function(n,i,a){return'string'==typeof n?'string'==typeof i||Array.isArray(i)?t(r,n,void 0,i):t(r,n,i,a):t(r,e,n,i)}}}Object.defineProperty(exports,'__esModule',{value:!0});var t=r({e:'-',m:'_'});exports.cn=t,exports.withNaming=r;\n","'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./build/classname.production.min.js')\n} else {\n  module.exports = require('./build/classname.development.js')\n}\n","export enum COLORS {\n  MIGOL_BLUE = '#28337B',\n  HEART_OF_ICE = '#F9FCFF',\n  RED = '#E75252',\n  GREEN = '#1BBFA3',\n  FOOTER = '#25304E',\n}\n\nexport const FONT_COLORS = {\n  'black': '#48484E',\n  'white': '#FBFDFD',\n  'grey': '#686868',\n  'light-grey': '#888',\n  'light-red': '#EC9B9A',\n  'light-green': '#90D2CE',\n  'footer': '#ACABB2',\n}\n\nexport type TFontColors = 'black' | 'white' | 'grey' | 'light-grey' | 'light-red' | 'light-green' | 'footer';\nexport type TColors = keyof typeof COLORS;\n","import React from \"react\";\nimport { COLORS } from \"../../colors.const\";\nimport { getClassName } from \"../../tools/getClassName\";\n\nconst cn = getClassName(\"slide\");\n\nimport './Slide.scss';\n\nexport type Props = {\n  className?: string,\n  children: React.ReactNode,\n  backgroundColor?: COLORS | string,\n  flexible?: boolean,\n};\n\nexport const Slide = ({\n  className,\n  children,\n  backgroundColor = COLORS.HEART_OF_ICE,\n  flexible\n}: Props) => {\n  const style = React.useMemo(() => ({ backgroundColor }), [backgroundColor]);\n\n  return <div className={cn({ flexible }, className)} style={style}>\n    {children}\n  </div>\n}\n","import React, { useMemo } from 'react';\nimport { getClassName } from '../../tools/getClassName';\nimport { FONT_COLORS, TFontColors } from \"../../colors.const\";\n\nimport './Text.scss';\n\nexport type Props = {\n  children: React.ReactNode,\n  as?: 'p' | 'span' | 'div',\n  color: TFontColors,\n  className?: string,\n}\n\nconst cn = getClassName('text');\n\nexport const Text = ({ children, as, color, className }: Props) => {\n  const Component = as || 'p';\n\n  const style = useMemo(() => ({ color: FONT_COLORS[color] }), [color]);\n\n  return <Component style={style} className={cn(null, className)}>{children}</Component>;\n}","import { withNaming } from '@bem-react/classname'\n\nexport const getClassName = withNaming({ e: '__', m: '_' });\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { getClassName } from \"../../tools/getClassName\";\n\nimport { Text } from \"../Text/Text\";\nimport './Header.scss';\n\nconst cn = getClassName(\"header\");\n\nexport const Header = ({ siteTitle }) => (\n  <header className={cn()}>\n    <div className={cn('brand')}>{siteTitle}</div>\n    <nav className={cn('links-group')}>\n      <Link className={cn('link')} to=\"\"><Text color='white'>Home</Text></Link>\n      <Link className={cn('link')} to=\"\"><Text color='white'>Classes</Text></Link>\n      <Link className={cn('link')} to=\"\"><Text color='white'>About</Text></Link>\n      <Link className={cn('link')} to=\"\"><Text color='white'>Events</Text></Link>\n      <Link className={cn('link')} to=\"\"><Text color='white'>Contact</Text></Link>\n    </nav>\n  </header>\n)\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { getClassName } from \"../../tools/getClassName\";\n\nimport { Text } from \"../Text/Text\";\nimport './Footer.scss';\nimport { Slide } from \"../Slide/Slide\";\nimport { COLORS } from \"../../colors.const\";\n\nconst cn = getClassName(\"footer\");\n\nexport const Footer = () => (\n  <Slide flexible backgroundColor={COLORS.FOOTER}>\n    <footer className={cn()}>\n      <div className={cn('brand')}>\n        <Text color='footer'>Â© {new Date().getFullYear()} &middot; Built with</Text>\n      </div>\n      \n    </footer>\n  </Slide>\n\n)\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport { Header } from \"./Header/Header\"\nimport { Footer } from \"./Footer/Footer\"\n\nimport '../common.scss';\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <main>{children}</main>\n      <Footer />\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst UsingDSG = () => (\n  <Layout>\n    <h1>\n      Hello from a <b>DSG Page</b>\n    </h1>\n    <p>This page is not created until requested by a user.</p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/reference/rendering-options/deferred-static-generation/\">\n        documentation about Deferred Static Generation\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head = () => <Seo title=\"Using DSG\" />\n\nexport default UsingDSG\n"],"names":["r","t","i","a","o","f","e","v","s","m","u","hasOwnProperty","p","n","y","c","Array","isArray","length","l","valueOf","g","split","d","h","exports","withNaming","module","COLORS","FONT_COLORS","cn","getClassName","Slide","_ref","className","children","backgroundColor","HEART_OF_ICE","flexible","style","React","Text","as","color","Component","useMemo","Header","siteTitle","Link","to","Footer","FOOTER","Date","getFullYear","data","useStaticQuery","site","siteMetadata","title","description","metaDescription","defaultTitle","name","content","property","author","Head","href"],"sourceRoot":""}